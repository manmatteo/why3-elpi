%% API for manipulating Why3 terms and declaration via Î»Prolog
%% This file is automatically generated.

% [why3.term->string T S] Pretty print a term using the native pretty
% printer
external pred why3.term->string i:term, o:string.

% [why3.decl->string D S] Pretty print a declaration using the native pretty
% printer
external pred why3.decl->string i:decl, o:string.

% [why3.create-prsymbol S P] Create a fresh prsymbol from a string
external pred why3.create-prsymbol i:string, o:prsymbol.

% [why3.create-prop N TS N] Axiomatize a propositional symbol with name N
% and argument types TS
external pred why3.create-prop i:string, i:list ty, o:lsymbol.

% [why3.create-lsymb N TS T N] Axiomatize a function symbol with name N,
% type T and argument types TS
external pred why3.create-lsymb i:string, i:list ty, i:ty, o:lsymbol.

% [why3.var-type V T] Get the type of a variable
external pred why3.var-type i:vsymbol, o:ty.

% [why3.lsymb-type L T] Get the type of a predicate symbol
external pred why3.lsymb-type i:lsymbol, o:ty.

% [why3.lsymb-args-type L T] Get the list of the argument types of a
% predicate symbol
external pred why3.lsymb-args-type i:lsymbol, o:list ty.

% [why3.search-lsymb E T N S L] Look for a symbol in the environment. The
% theory T and namespace N where the symbol should be looked for need to be
% provided.
external pred why3.search-lsymb i:env, i:string, i:list string, i:string, 
                                o:lsymbol.

% Embedding of type variables
typeabbrev env (ctype "env").


% Embedding of predicate symbols
typeabbrev lsymbol (ctype "lsymbol").


% Embedding of variable symbols
typeabbrev vsymbol (ctype "vsymbol").


kind term type.
type lsymb lsymbol -> term.
type tint int -> term.
type tstr string -> term.
type appl lsymbol -> list term -> term.
type and term -> term -> term.
type or  term -> term -> term.
type imp term -> term -> term.
type iff term -> term -> term.
type all ty -> (term -> term) -> term.
type ex  ty -> (term -> term) -> term.
type ite term -> term -> term -> term.
type not term -> term.
type top term.
type bot term.
% Embedding of types
kind ty type.
type tvar tyvsymbol -> ty. % Type variable
type tapp tysymbol -> list ty -> ty.

% Embedding of type symbols
typeabbrev tysymbol (ctype "tysymbol").


% Embedding of type variables
typeabbrev tyvsymbol (ctype "tyvsymbol").


% Names for declarations
typeabbrev prsymbol (ctype "prsymbol").


% Theory declarations
kind tdecl type.
type decl decl -> tdecl. % Local or imported declaration
type use theory -> tdecl. % Use of theory
type meta meta -> list meta-arg -> tdecl. % Map of metas
type clone meta-arg -> tdecl. % Clone of theory

kind decl type.
type goal   prsymbol -> term -> decl.
type lemma  prsymbol -> term -> decl.
type axiom  prsymbol -> term -> decl.
type tydecl tysymbol -> decl.
type data   list X   -> decl.
type declls list X   -> decl.
type param  lsymbol  -> decl.
% Predicates for building Why3 transformations

% [why3.get-env E] Get the environment in which the transformation is called
external pred why3.get-env o:env.

type transform string -> list tdecl -> list tdecl -> prop.




