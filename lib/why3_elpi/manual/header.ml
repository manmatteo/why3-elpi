open Why3
open Why3.Term
open Why3.Ident
open Why3.Ty
open Why3.Env
open Why3.Decl
open Why3.Task
open Elpi

(* Accumulate declarations from Elpi PPX here *)
let declaration : Elpi.API.BuiltIn.declaration list ref = ref []

let document builtins =
  let w3lp_builtins = API.BuiltIn.declare ~file_name:"w3lp.elpi" builtins
  in let header = "%% API for manipulating Why3 terms and declaration via λProlog\n%% This file is automatically generated."
  in API.BuiltIn.document_file ~header w3lp_builtins
(* Add a declaration to the list *)

(* Printer for Ident-like Why3 builtins: ident, variables...
   These are mostly a layer over Ident, and can be seen as names *)
let pp_why_ident p = fun fmt x -> Format.fprintf fmt "`%a`" p x 
(* Printer for Why3 names that include more content: logic symbols, data
   types...  This content (typing for lsymbols, constructors for data types...)
   is accessed via builtin predicates  *)
let pp_why_data p = fun fmt x -> Format.fprintf fmt "«%a»" p x 
